# üöÄ Setup Autom√°tico para Projetos Novos
# =======================================
# Este script facilita a cria√ß√£o de novos projetos com o Agente Principal

param(
    [Parameter(Position = 0)]
    [string]$ProjectName = "",
    
    [Parameter(Position = 1)]
    [string]$ProjectType = "",
    
    [switch]$AutoGenerate = $true
)

function Write-SetupMessage {
    param([string]$Message, [string]$Icon = "üöÄ")
    Write-Host "$Icon $Message" -ForegroundColor Cyan
}

function Show-ProjectTypes {
    Write-Host ""
    Write-Host "üéØ TIPOS DE PROJETO DISPON√çVEIS:" -ForegroundColor Green
    Write-Host "================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üåê SITES & WEB APPS:" -ForegroundColor White
    Write-Host "   site-vendas      - Loja online completa" -ForegroundColor Gray
    Write-Host "   blog             - Blog responsivo" -ForegroundColor Gray
    Write-Host "   portfolio        - Site pessoal" -ForegroundColor Gray
    Write-Host "   landing-page     - P√°gina de convers√£o" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üîå APIs & BACKEND:" -ForegroundColor White
    Write-Host "   api-rest         - API REST completa" -ForegroundColor Gray
    Write-Host "   backend-app      - Backend para mobile" -ForegroundColor Gray
    Write-Host "   microservice     - Microservi√ßo" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üì± APLICATIVOS:" -ForegroundColor White
    Write-Host "   app-tarefas      - Lista de tarefas" -ForegroundColor Gray
    Write-Host "   app-financeiro   - Controle financeiro" -ForegroundColor Gray
    Write-Host "   app-notas        - Bloco de notas" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üè¢ SISTEMAS:" -ForegroundColor White
    Write-Host "   crm              - Sistema CRM" -ForegroundColor Gray
    Write-Host "   estoque          - Controle de estoque" -ForegroundColor Gray
    Write-Host "   escola           - Sistema escolar" -ForegroundColor Gray
    Write-Host ""
}

# Se n√£o informou nome do projeto, perguntar
if (-not $ProjectName) {
    Write-Host ""
    Write-Host "ü§ñ CRIADOR AUTOM√ÅTICO DE PROJETOS" -ForegroundColor Cyan
    Write-Host "==================================" -ForegroundColor Cyan
    Write-Host ""
    $ProjectName = Read-Host "üìù Nome do seu projeto"
    
    if (-not $ProjectName) {
        Write-Host "‚ùå Nome √© obrigat√≥rio!" -ForegroundColor Red
        exit 1
    }
}

# Se n√£o informou tipo, mostrar op√ß√µes
if (-not $ProjectType) {
    Show-ProjectTypes
    $ProjectType = Read-Host "üéØ Que tipo de projeto voc√™ quer"
}

# Criar diret√≥rio do projeto
$projectPath = ".\$ProjectName"
if (Test-Path $projectPath) {
    Write-Host "‚ö†Ô∏è  Pasta '$ProjectName' j√° existe!" -ForegroundColor Yellow
    $overwrite = Read-Host "Sobrescrever? (y/N)"
    if ($overwrite -ne "y" -and $overwrite -ne "Y") {
        exit 1
    }
    Remove-Item $projectPath -Recurse -Force
}

Write-SetupMessage "Criando projeto '$ProjectName'..." "üìÅ"
New-Item -ItemType Directory -Path $projectPath | Out-Null
Set-Location $projectPath

# Copiar sistema MultiAgent para o projeto
Write-SetupMessage "Configurando sistema MultiAgent..." "‚öôÔ∏è"

# Criar estrutura b√°sica
@"
{
  "project": {
    "name": "$ProjectName",
    "type": "$ProjectType",
    "created": "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')",
    "version": "1.0.0",
    "multiagent": {
      "enabled": true,
      "autoMode": true,
      "scpoEnabled": true
    }
  },
  "settings": {
    "autoGenerate": true,
    "autoTest": true,
    "autoFix": true,
    "learnFromUser": true
  }
}
"@ | Set-Content "project.json"

# Copiar scripts essenciais
$sourceScripts = "$PSScriptRoot\..\scripts"
if (Test-Path $sourceScripts) {
    Write-SetupMessage "Copiando scripts MultiAgent..." "üìã"
    Copy-Item "$sourceScripts\ma.ps1" "." -Force
    Copy-Item "$sourceScripts\*agent*.ps1" "." -Force -ErrorAction SilentlyContinue
}

# Copiar comando 'quero'
$sourceQuero = "$PSScriptRoot\..\quero.ps1"
if (Test-Path $sourceQuero) {
    Copy-Item $sourceQuero "." -Force
}

# Mapear tipos para comandos
$typeCommands = @{
    "site-vendas" = "uma loja online completa com carrinho de compras e pagamento"
    "blog" = "um blog responsivo com admin e coment√°rios"
    "portfolio" = "um site de portf√≥lio pessoal moderno"
    "landing-page" = "uma landing page de convers√£o otimizada"
    "api-rest" = "uma API REST completa com autentica√ß√£o e CRUD"
    "backend-app" = "um backend para aplicativo mobile com API"
    "microservice" = "um microservi√ßo escal√°vel com Docker"
    "app-tarefas" = "um aplicativo de lista de tarefas com banco de dados"
    "app-financeiro" = "um sistema de controle financeiro pessoal"
    "app-notas" = "um aplicativo de notas e lembretes"
    "crm" = "um sistema CRM completo para gest√£o de clientes"
    "estoque" = "um sistema de controle de estoque com relat√≥rios"
    "escola" = "um sistema de gest√£o escolar completo"
}

$command = $typeCommands[$ProjectType]
if (-not $command) {
    $command = $ProjectType
}

Write-SetupMessage "Projeto '$ProjectName' criado com sucesso!" "‚úÖ"
Write-Host ""
Write-Host "üìÅ Local: $(Get-Location)" -ForegroundColor Gray
Write-Host "üéØ Tipo: $ProjectType" -ForegroundColor Gray
Write-Host ""

if ($AutoGenerate) {
    Write-SetupMessage "Gerando c√≥digo automaticamente..." "ü§ñ"
    Write-Host "üí≠ Comando: '$command'" -ForegroundColor Yellow
    Write-Host ""
    
    # Executar gera√ß√£o autom√°tica
    if (Test-Path ".\quero.ps1") {
        & ".\quero.ps1" $command
    } elseif (Test-Path ".\ma.ps1") {
        & ".\ma.ps1" $command
    } else {
        Write-Host "‚ö†Ô∏è  Scripts n√£o encontrados. Execute manualmente:" -ForegroundColor Yellow
        Write-Host "   quero '$command'" -ForegroundColor White
    }
} else {
    Write-Host "üéØ PR√ìXIMOS PASSOS:" -ForegroundColor Green
    Write-Host "==================" -ForegroundColor Green
    Write-Host ""
    Write-Host "1. Entre na pasta:" -ForegroundColor White
    Write-Host "   cd $ProjectName" -ForegroundColor Gray
    Write-Host ""
    Write-Host "2. Gere seu c√≥digo:" -ForegroundColor White
    Write-Host "   quero '$command'" -ForegroundColor Gray
    Write-Host ""
    Write-Host "3. Ou use comando customizado:" -ForegroundColor White
    Write-Host "   quero 'sua descri√ß√£o personalizada'" -ForegroundColor Gray
    Write-Host ""
}